# compose.yaml
services:
  db:
    image: postgres:latest
    hostname: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-store}
      POSTGRES_USER: ${POSTGRES_USER:-store}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-store}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - store-project
  
  exchange:
    build:
      context: ./exchange-service
      dockerfile: Dockerfile
    networks:
      - store-project

  account:
    hostname: account
    build:
      context: ./account-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}
    depends_on:
      - db
    networks:
      - store-project

  auth:
    hostname: auth
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-yrBBgYlvJQeslzFlgX9MFZccToI2fjRFqualquercoisa}
    networks:
      - store-project

  gateway:
    hostname: gateway
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    environment:
      - LOGGING_LEVEL_STORE=${LOGGING_LEVEL_STORE:-debug}
    ports:
      - 8080:8080
    depends_on:
      - account
      - auth
      - product
      - order
      - exchange
    networks:
      - store-project

  product:
    hostname: product
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    networks:
      - store-project

  order:
    hostname: order
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}
    depends_on:
      - db
    networks:
      - store-project

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus-config:/etc/prometheus
    networks:
      - store-project

  grafana:
    image: grafana/grafana-enterprise
    hostname: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    user: "472"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-provisioning:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - store-project

  redis:
    image: redis:latest
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - store-project

volumes:
  postgres-data:
  prometheus-config:
  grafana-data:
  grafana-provisioning:

networks:
  store-project:
    driver: bridge
